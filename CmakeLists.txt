project(Spp)

cmake_minimum_required(VERSION 3.16)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)


# Google test
add_subdirectory(extern/gtest)
include(GoogleTest)

macro(spp_test _target _src _test_src)
  set(_all_src "${_src}" "${_test_src}")
  message(STATUS "Setting tests for ${_target}")
  message(STATUS "src: ${_src}")
  message(STATUS "test src: ${_test_src}")
  add_executable(${_target} "${_all_src}")
  target_link_libraries("${_target}" gtest_main)
  unset(_all_src)
endmacro()

set(_RATIONAL_SRC "ast/operand/smart_num/rational/rational.h" "util/concept.h")
set(_RATIONAL_TEST_SRC "ast/operand/smart_num/rational/test.cpp")

set(_SMART_NUM_SRC "ast/operand/smart_num/smart_num.h" "util/concept.h" "${_RATIONAL_SRC}")
set(_SMART_NUM_TEST_SRC "ast/operand/smart_num/test.cpp")

spp_test(rational_test "${_RATIONAL_SRC}" "${_RATIONAL_TEST_SRC}")
spp_test(smart_num_test "${_SMART_NUM_SRC}" "${_SMART_NUM_TEST_SRC}")

set(_AST_SRC "ast/ast.h" "ast/node.h"
"ast/operator/base.h" "ast/operator/base.cpp"
"ast/operator/neg.h" "ast/operator/neg.cpp" 
"ast/operator/add.h" "ast/operator/add.cpp" 
"ast/operator/sub.h" "ast/operator/sub.cpp" 
"ast/operator/mul.h" "ast/operator/mul.cpp" 
"ast/operator/div.h" "ast/operator/div.cpp"
"ast/operand/base.h" "ast/operand/base.cpp" 
"ast/operand/number.h" "ast/operand/number.cpp" 
"ast/operand/variable.h" "ast/operand/variable.cpp" 
"${_SMART_NUM_SRC}")

set(_AST_TEST_SRC "ast/test.cpp" "${_AST_SRC}")

spp_test(ast_test "${_AST_SRC}" "${_AST_TEST_SRC}")

set(_EXPRESSION_SRC 
"expression/expression.h" "expression/expression.cpp" "${_AST_SRC}"
)
set(_EXPRESSION_TEST_SRC 
"expression/tests/util/common.h"
"expression/tests/arithmetic.cpp" 
"expression/tests/transform/expand_add.cpp"
"expression/tests/transform/collect.cpp"
)

spp_test(expr_test "${_EXPRESSION_SRC}" "${_EXPRESSION_TEST_SRC}")

